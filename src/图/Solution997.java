package 图;
/*
 * 题目描述

评论 (219)
题解(145)

提交记录
997. 找到小镇的法官
难度
简单

在一个小镇里，按从 1 到 N 标记了 N 个人。传言称，这些人中有一个是小镇上的秘密法官。
如果小镇的法官真的存在，那么：
小镇的法官不相信任何人。
每个人（除了小镇法官外）都信任小镇的法官。
只有一个人同时满足属性 1 和属性 2 。
给定数组 trust，该数组由信任对 trust[i] = [a, b] 组成，表示标记为 a 的人信任标记为 b 的人。
如果小镇存在秘密法官并且可以确定他的身份，请返回该法官的标记。否则，返回 -1。
 
示例 1：
输入：N = 2, trust = [[1,2]]
输出：2
示例 2：
输入：N = 3, trust = [[1,3],[2,3]]
输出：3
示例 3：
输入：N = 3, trust = [[1,3],[2,3],[3,1]]
输出：-1
示例 4：
输入：N = 3, trust = [[1,2],[2,3]]
输出：-1
示例 5：
输入：N = 4, trust = [[1,3],[1,4],[2,3],[2,4],[4,3]]
输出：3
 */
public class Solution997 {
    public int findJudge(int N, int[][] trust) {
        int[][] degree = new int[N][2];
        for(int i=0;i<trust.length;i++){ 
            degree[trust[i][0]-1][1]++;  //出度
            degree[trust[i][1]-1][0]++;   //入度
        }
        //1.不相信任何人，表示出度为0
        //2.每个人都信任法官，表示入度为N-1；
        //只有一个人满足前两个条件，表示不允许出现两个满足条件者。

        //寻找满足上述条件的人
        int count = 0;
        int res = -1;
        for(int i=0;i<degree.length;i++){
            if(degree[i][1]==0&&degree[i][0]==N-1){
                res = i+1;
                count++;
                if(count>1) return -1;
            }

        }
        return res;
    }
}
